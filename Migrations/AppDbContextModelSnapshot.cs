// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tic_tac_toe.Db;

#nullable disable

namespace tic_tac_toe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LobbyPlayer", b =>
                {
                    b.Property<string>("LobbiesId")
                        .HasColumnType("text");

                    b.Property<string>("PlayersId")
                        .HasColumnType("text");

                    b.HasKey("LobbiesId", "PlayersId");

                    b.HasIndex("PlayersId");

                    b.ToTable("LobbyPlayer");
                });

            modelBuilder.Entity("tic_tac_toe.Models.Game", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LobbyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MoveOwnerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Winner")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("tic_tac_toe.Models.Lobby", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("Closed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Lobbies");
                });

            modelBuilder.Entity("tic_tac_toe.Models.Move", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("tic_tac_toe.Models.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("tic_tac_toe.Models.Score", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("LobbyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlayerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Victories")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("LobbyPlayer", b =>
                {
                    b.HasOne("tic_tac_toe.Models.Lobby", null)
                        .WithMany()
                        .HasForeignKey("LobbiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tic_tac_toe.Models.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tic_tac_toe.Models.Game", b =>
                {
                    b.HasOne("tic_tac_toe.Models.Lobby", null)
                        .WithMany("Games")
                        .HasForeignKey("LobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tic_tac_toe.Models.Move", b =>
                {
                    b.HasOne("tic_tac_toe.Models.Game", null)
                        .WithMany("Moves")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tic_tac_toe.Models.Player", null)
                        .WithMany("Moves")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tic_tac_toe.Models.Score", b =>
                {
                    b.HasOne("tic_tac_toe.Models.Lobby", null)
                        .WithMany("Scores")
                        .HasForeignKey("LobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tic_tac_toe.Models.Player", null)
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tic_tac_toe.Models.Game", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("tic_tac_toe.Models.Lobby", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Scores");
                });

            modelBuilder.Entity("tic_tac_toe.Models.Player", b =>
                {
                    b.Navigation("Moves");

                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
